{"ast":null,"code":"import _regeneratorRuntime from \"/home/tianyu/ReduxForm/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/tianyu/ReduxForm/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\n//Promise构造函数接收一个函数作为参数，接收额外两个函数resolve和reject\n//resolve表示Promise为解决状态，reject表示为拒绝状态\n//setTimeout用于在指定的毫秒数后调用函数\nvar sleep = function sleep(ms) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n}; //async函数返回的是一个Promise对象\n\n\nexport default\n/*#__PURE__*/\n(function () {\n  var _showResults = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(values) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return sleep(500);\n\n          case 2:\n            //JSON.stringify(value, replacer, space)\n            //value指将要序列化成JSON字符串的值\n            //replacer为null，对象所有属性都会被序列化\n            //space指缩进用的空白字符串，用于美化输出\n            //ES6的新语法，模板字符串，可以换行、嵌入变量和原生输出\n            //小撇号使用tab键上面的引号``， 非enter键旁边的引号''\n            window.alert(\"You submitted:\\n\\n\".concat(JSON.stringify(values, null, 2)));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function showResults(_x) {\n    return _showResults.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["/home/tianyu/ReduxForm/src/showResults.js"],"names":["sleep","ms","Promise","resolve","setTimeout","values","window","alert","JSON","stringify","showResults"],"mappings":";;;AAAA;AACA;AACA;AACA,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAAAC,EAAE;AAAA,SAAI,IAAIC,OAAJ,CAAY,UAAAC,OAAO;AAAA,WAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAd;AAAA,GAAnB,CAAJ;AAAA,CAAhB,C,CACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAgB,iBAA2BI,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGNL,KAAK,CAAC,GAAD,CAHC;;AAAA;AAIZ;AACA;AACA;AACA;AACA;AACA;AACAM,YAAAA,MAAM,CAACC,KAAP,6BAAkCC,IAAI,CAACC,SAAL,CAAeJ,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAlC;;AAVY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA,kBAA+BK,WAA/B;AAAA;AAAA;AAAA","sourcesContent":["//Promise构造函数接收一个函数作为参数，接收额外两个函数resolve和reject\n//resolve表示Promise为解决状态，reject表示为拒绝状态\n//setTimeout用于在指定的毫秒数后调用函数\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n//async函数返回的是一个Promise对象\nexport default (async function showResults(values) {\n    //模拟服务器延迟\n    //如果Promise是完成状态，await的结果是完成态的值，反之抛出拒绝值\n    await sleep(500);\n    //JSON.stringify(value, replacer, space)\n    //value指将要序列化成JSON字符串的值\n    //replacer为null，对象所有属性都会被序列化\n    //space指缩进用的空白字符串，用于美化输出\n    //ES6的新语法，模板字符串，可以换行、嵌入变量和原生输出\n    //小撇号使用tab键上面的引号``， 非enter键旁边的引号''\n    window.alert(`You submitted:\\n\\n${JSON.stringify(values, null, 2)}`);\n});"]},"metadata":{},"sourceType":"module"}