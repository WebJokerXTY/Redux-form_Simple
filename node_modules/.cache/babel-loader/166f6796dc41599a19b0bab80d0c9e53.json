{"ast":null,"code":"var _jsxFileName = \"/home/tianyu/ReduxForm/src/SimpleForm.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nvar SimpleForm = function SimpleForm(props) {\n  //handleSubmit是处理提交的一个函数，接收三个参数：values（保存表单数据的对象），dispatch和props（传递给自定义表单组件的属性）\n  //pristine是一个布尔型的值，表单中无输入值为true，否则为false\n  //reset是一个函数，调用reset()可以清空表单\n  //submitting是一个布尔型的值，表单正在提交时为true\n  var handleSubmit = props.handleSubmit,\n      pristine = props.pristine,\n      reset = props.reset,\n      submitting = props.submitting;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"First Name\"), React.createElement(Field, {\n    name: \"firstName\",\n    component: \"input\",\n    type: \"text\",\n    placeholder: \"First Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Last Name\"), React.createElement(Field, {\n    name: \"lastName\",\n    component: \"input\",\n    type: \"text\",\n    placeholder: \"Last Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Field, {\n    name: \"email\",\n    component: \"input\",\n    type: \"email\",\n    placeholder: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"sex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Sex\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"sex\",\n    component: \"input\",\n    type: \"radio\",\n    value: \"male\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), ' ', \"Male\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"sex\",\n    component: \"input\",\n    type: \"radio\",\n    value: \"female\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), ' ', \"Female\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"favoriteColor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Favorite Color\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"favoriteColor\",\n    component: \"select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"ff0000\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Red\"), React.createElement(\"option\", {\n    value: \"00ff00\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Green\"), React.createElement(\"option\", {\n    value: \"0000ff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Blue\")))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"employed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Employed\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"employed\",\n    id: \"employed\",\n    component: \"input\",\n    type: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"notes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"notes\",\n    component: \"textarea\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: pristine || submitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(\"button\", {\n    type: \"button\",\n    disabled: pristine || submitting,\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Reset\")));\n};\n\nexport default reduxForm({\n  //给这个表单命名标记\n  form: 'simple'\n})(SimpleForm);","map":{"version":3,"sources":["/home/tianyu/ReduxForm/src/SimpleForm.js"],"names":["React","Field","reduxForm","SimpleForm","props","handleSubmit","pristine","reset","submitting","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nconst SimpleForm = props => {\n    //handleSubmit是处理提交的一个函数，接收三个参数：values（保存表单数据的对象），dispatch和props（传递给自定义表单组件的属性）\n    //pristine是一个布尔型的值，表单中无输入值为true，否则为false\n    //reset是一个函数，调用reset()可以清空表单\n    //submitting是一个布尔型的值，表单正在提交时为true\n    const { handleSubmit, pristine, reset, submitting } = props;\n    return (\n        <form onSubmit = { handleSubmit }>\n            <div>\n                <label htmlFor = \"firstName\">First Name</label>\n                <Field \n                    name = \"firstName\" \n                    component = \"input\" \n                    type = \"text\" \n                    placeholder = \"First Name\"\n                />\n            </div>\n            <div>\n                <label htmlFor = \"lastName\">Last Name</label>\n                <Field \n                    name = \"lastName\" \n                    component = \"input\" \n                    type = \"text\" \n                    placeholder = \"Last Name\"\n                />\n            </div>\n            <div>\n                <label htmlFor = \"email\">Email</label>\n                <Field \n                    name = \"email\" \n                    component = \"input\" \n                    type = \"email\" \n                    placeholder = \"Email\"\n                />\n            </div>\n            <div>\n                <label htmlFor = \"sex\">Sex</label>\n                <div>\n                    <label>\n                        <Field\n                            name = \"sex\"\n                            component = \"input\"\n                            type = \"radio\"\n                            value = \"male\"\n                        />\n                        {' '}\n                        Male\n                    </label>\n                    <label>\n                        <Field\n                            name = \"sex\"\n                            component = \"input\"\n                            type = \"radio\"\n                            value = \"female\"\n                        />\n                        {' '}\n                        Female\n                    </label>\n                </div>\n            </div>\n            <div>\n                <label htmlFor = \"favoriteColor\">Favorite Color</label>\n                <div>\n                    <Field name = \"favoriteColor\" component = \"select\">\n                        <option />\n                        <option value = \"ff0000\">Red</option>\n                        <option value = \"00ff00\">Green</option>\n                        <option value = \"0000ff\">Blue</option>\n                    </Field>\n                </div>\n            </div>\n            <div>\n                <label htmlFor = \"employed\">Employed</label>\n                <div>\n                    <Field\n                        name=\"employed\"\n                        id=\"employed\"\n                        component=\"input\"\n                        type=\"checkbox\"\n                    />\n                </div>\n            </div>\n            <div>\n                <label htmlFor = \"notes\">Notes</label>\n                <div>\n                    <Field \n                        name=\"notes\" \n                        component=\"textarea\" \n                    />\n                </div>\n            </div>\n            <div>\n                <button type = \"submit\" disabled = {pristine || submitting}>\n                    Submit\n                </button>\n                <button type = \"button\" disabled = {pristine || submitting} onClick = {reset}>\n                    Reset\n                </button>\n            </div>\n        </form>\n    );\n};\n\nexport default reduxForm({\n    //给这个表单命名标记\n    form: 'simple'\n})(SimpleForm);"]},"metadata":{},"sourceType":"module"}